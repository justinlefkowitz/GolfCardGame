import java.util.ArrayList;
import java.util.Scanner;

public class Engine {

	private static ArrayList<Player> players = new ArrayList<Player>();
	private static CardDeck cards = new CardDeck();
	private static Card topCard;
	private static Card picked;
	
	private static Scanner in;
	private static String answer;
	
	
	
	public Engine() {
		in = new Scanner(System.in);
		
		players.add(new Player("Justin"));
		players.add(new Player("Simon"));
		
		startGame();
		
	}
	
	
	public static void gameplay() {
		in = new Scanner(System.in);
		
		players.add(new Player("Justin"));
		players.add(new Player("Simon"));
		
		startGame();
		
		display();
		
		
		
		for (int round = 0; round < 4; round++) {
			
			for (Player p: players) {
				turn(p);
				display();
			}
		
		}
		
		for (Player p: players) {
			System.out.println(p.getName() + " got a score of: " + p.hand.score());
			p.addScore(p.hand.score());
		}
	}
	
	public Player getPlayer(int i) {
		return players.get(i);
	}
	
	
	
	
	public static void startGame() {
		for (int i = 0; i < 4; i++) {
			for (int p = 0; p < players.size(); p++) {
				players.get(p).hand.receive(getCards().draw());
			}
			nextCard();
		}
	}
	
	
	public static void display() {
		for (Player p: players) {
			System.out.println(p.getName());
			p.hand.printHand();
			System.out.println();
		}
		System.out.println("\nThe top card is " + topCard);
		
	}
	
	public static void nextCard() {
		topCard = getCards().draw();
		
	}
	
	
	public static void cardReplace(Player p, Card c) {
		int i;
		do {
			System.out.println("Which index would you like to replace?");
			i = in.nextInt();	
		} while (p.hand.getHandState(i) != 0);
		
		topCard = p.hand.trade(c, i);
		p.hand.play(i);	
	}
	
	public static void flip(Player p) {
		int i;
		do {
			System.out.println("Which index would you like to flip?");
			i = in.nextInt();
		} while (p.hand.getHandState(i) != 0);
		
		p.hand.play(i);
	}
	
	
	
	
	

	public static void turn(Player p) {
		
		answer = "null!";
		
		while (!(answer.equals("deck") || answer.equals("top") || answer.equals("flip"))) {
			System.out.println(p.getName() + ", choose 'deck' or 'top' or 'flip'");
			answer = in.nextLine();
		}
		
		if (answer.equals("top")) {
			
			cardReplace(p, topCard);
			
			
		} else if (answer.equals("deck")) {

			
			picked = getCards().draw();
			System.out.println("You picked the " + picked);
			
			
			while (!(answer.equals("keep") || answer.equals("toss"))) {
				System.out.println(p.getName() + ", would you like to 'keep' or 'toss'?");
				answer = in.nextLine();
			}
			
			
			
			if (answer.equals("keep")) {
				
				cardReplace(p, picked);
				
				
			} else {
				topCard = picked;
				
				flip(p);
				
			}
			
		} else {
			
			flip(p);
		}
		
		
	}


	public static CardDeck getCards() {
		return cards;
	}

	public Card getTop() {
		return topCard;
	}


	
	
}
