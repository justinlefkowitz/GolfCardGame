import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;

public class Card extends JPanel{
	
	// suits are 0,1,2,3 {Hearts, Clubs, Spades, Diamonds};
	public enum Suit {
		HEARTS,
		CLUBS,
		DIAMONDS,
		SPADES;
	}

	
	private int num;
	private Suit suit;
	private int state; 
		//0 - down
		//1 - up
		//2 - transparent
	private boolean isHighlighted;
	
	private static final Color highlight = new Color(253, 255, 50, 100);
	
	private BufferedImage cardImage;
	private BufferedImage backImage;
	
	private Dimension cardDimension;
	
	
	public Card(int n, Suit s) {
		num = n;
		suit = s;
		state = 0;
		isHighlighted = false;
		
		
		try {
			cardImage = ImageIO.read(getClass().getResource("./images/" + addressName() + ".png"));
			backImage = ImageIO.read(getClass().getResource("./images/cardback.png"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		cardDimension = new Dimension(50, 100);
		
		this.setSize(cardDimension);
		this.setMaximumSize(cardDimension);
		this.setBorder(BorderFactory.createLineBorder(Color.black));
		
	}
	
	public String toString() { 
		String s = "";
		String number = "";
		

		
		if (num == 1) {
			number = "Ace";
		} else if (num == 2) {
			number = "Two";
		} else if (num == 3) {
			number = "Three";
		} else if (num == 4) {
			number = "Four";
		} else if (num == 5) {
			number = "Five";
		} else if (num == 6) {
			number = "Six";
		} else if (num == 7) {
			number = "Seven";
		} else if (num == 8) {
			number = "Eight";
		} else if (num == 9) {
			number = "Nine";
		} else if (num == 10) {
			number = "Ten";
		} else if (num == 11) {
			number = "Jack";
		} else if (num == 12) {
			number = "Queen";
		} else if (num == 13) {
			number = "King";
		}
		
		return number + " of " + suit;
	}
	
	public String addressName() {
		String s = "";
		String number = "";
		

		
		if (num == 1) {
			number = "Ace";
		} else if (num == 11) {
			number = "Jack";
		} else if (num == 12) {
			number = "Queen";
		} else if (num == 13) {
			number = "King";
		} else {
			number = Integer.toString(num);
		}
		
		return (number + "_of_" + suit).toLowerCase();
	}
	
	public int getNum() {
		return num;
	}
	
	public int state() {
		return state;
	}	
	
	public void flip() {
		state = 1;
	}
	
	public void highlight() {
		isHighlighted = true;
	}
	

	
	protected void paintComponent(Graphics g) {
		g.setColor(Color.BLUE);
		
		BufferedImage img = null;


		img = cardImage;
		if (state == 1) img = backImage; 
		
		
		float cardRatio = img.getHeight() / img.getWidth();
		float panelRatio = this.getHeight() / this.getWidth();
		
		
		if (cardRatio < panelRatio + 1) { //wow if it aint broke don't fix it (+ 1 just magically fixed the ratio testing)
			g.drawImage(img, 0, (int) ((this.getHeight() - (this.getWidth() * cardRatio)) / 2), this.getWidth(), (int)(this.getWidth() * cardRatio), null);
		} else {
			g.drawImage(img, (int)(this.getWidth() - (this.getHeight() / cardRatio))/2, 0, (int) (this.getHeight() / cardRatio), this.getHeight(), null);
		}
		
		
		
		if (isHighlighted) {
			g.setColor(highlight);
			g.fillRect(this.getX(), this.getY(), this.getWidth(), this.getHeight());
		}
		
	}


}



